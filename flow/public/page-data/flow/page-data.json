{"componentChunkName":"component---node-modules-gatsby-theme-documentation-src-templates-doc-js","path":"/flow","webpackCompilationHash":"","result":{"data":{"doc":{"id":"18c7c265-2be8-5e11-af29-cf61380e1923","title":"","description":null,"excerpt":"Flow The  Flow  component is the core of the Flow package. The component: has a \"context\" of connected Frames manages a \"stack\" of visitedâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"flow\"\n  }, \"Flow\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Flow\"), \" component is the core of the Flow package. The component:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"has a \\\"context\\\" of connected Frames\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"manages a \\\"stack\\\" of visited Frames\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"displays the correct Frame as a user navigates\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"responds to the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"showNext\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"showPrevious\"), \" functions\")), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Prop\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Type\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"pages\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"ReactNode[]\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"[]\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"variants\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"object\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"See \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Variants\"), \" below\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"swipe\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"swipeDistance\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"number\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"32\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"unmountHidden\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"boolean\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"onSwipeLeft\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"(name, position, stack) => void\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"() => null\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"onSwipeRight\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"(name, position, stack) => void\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"() => null\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"onSwipeUp\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"(name, position, stack) => void\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"() => null\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"onSwipeDown\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"(name, position, stack) => void\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"() => null\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"onChangePage\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"(name, position, stack) => void\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"() => null\"))))), mdx(\"h2\", {\n    \"id\": \"variants\"\n  }, \"Variants\"), mdx(\"p\", null, \"The Flow component takes three variants. These control the component's\\ntransitions.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When responding to a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"showNext\"), \" call, the component will animate its old\\ncurrent Frame from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"current\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"behind\"), \" while animating the new current Frame\\nfrom \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ahead\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"current\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When responding to a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"showPrevious\"), \" call, the component will animate its old\\ncurrent Frame from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"current\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ahead\"), \" while animating the new current Frame\\nfrom \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"behind\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"current\"), \".\")), mdx(\"p\", null, \"Its defaults are:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\"\n  }), \"const variants = {\\n    behind: {\\n        x: '0%',\\n        filter: 'brightness(50%)',\\n        transition: {\\n            ease: [0.23, -0.04, 0.31, 1.01],\\n            duration: 0.36,\\n        },\\n    },\\n    current: {\\n        x: '0%',\\n        filter: 'brightness(100%)',\\n        transition: {\\n            ease: [0.23, -0.04, 0.31, 1.01],\\n            duration: 0.36,\\n        },\\n    },\\n    ahead: {\\n        x: '100%',\\n        filter: 'brightness(100%)',\\n        transition: {\\n            ease: [0.23, -0.04, 0.31, 1.01],\\n            duration: 0.28,\\n        },\\n    },\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"onchangepage\"\n  }, \"onChangePage\"), mdx(\"p\", null, \"Each time the user navigates to a new Frame, the Flow component will call the\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onChangePage\"), \" event with the following arguments:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"name\"), \" - the name of the current navigation target\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"position\"), \" - the component's current position in the navigation stack\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"stack\"), \" - the component's full navigation stack\")), mdx(\"h2\", {\n    \"id\": \"swiping\"\n  }, \"Swiping\"), mdx(\"p\", null, \"If the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"swipe\"), \" prop is set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \" (its default value), the Flow component\\nwill respond to swipe events. You can customize the minimum distance for a swipe\\nthrough the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"swipeDistance\"), \" property, and use the four events below to respond\\nto swipes in different directions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onSwipeLeft\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onSwipeRight\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onSwipeUp\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onSwipeDown\"))), mdx(\"p\", null, \"Each of these event callbacks will be called with the same arguments as\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onChangePage\"), \".\"), mdx(\"h2\", {\n    \"id\": \"unmounthidden\"\n  }, \"unmountHidden\"), mdx(\"p\", null, \"By default, each Frame in the component's stack will remain mounted so long as\\nthe component itself is mounted. While this allows each visited Frame to\\npreserve its state, it may create problems for some projects. To turn the\\nfeature off and unmount all but the current Frame, set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"unmountHidden\"), \" to\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"Flow"},{"value":"Variants"},{"value":"onChangePage"},{"value":"Swiping"},{"value":"unmountHidden"}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"18c7c265-2be8-5e11-af29-cf61380e1923","slug":"/flow","previous":{"id":"ca838134-c31d-58be-a309-699cb9956002","slug":"/link"},"next":null}}}